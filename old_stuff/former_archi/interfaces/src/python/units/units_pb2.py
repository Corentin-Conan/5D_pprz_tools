# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: units/units.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='units/units.proto',
  package='units',
  syntax='proto3',
  serialized_options=_b('Z)github.com/airmap/interfaces/src/go/units'),
  serialized_pb=_b('\n\x11units/units.proto\x12\x05units\"\x18\n\x07\x44\x65grees\x12\r\n\x05value\x18\x01 \x01(\x01\"\x18\n\x07\x43\x65lsius\x12\r\n\x05value\x18\x01 \x01(\x01\"\x16\n\x05Volts\x12\r\n\x05value\x18\x01 \x01(\x01\"\x18\n\x07\x41mperes\x12\r\n\x05value\x18\x01 \x01(\x01\"\x1c\n\x0b\x41mpereHours\x12\r\n\x05value\x18\x01 \x01(\x01\"\x17\n\x06Meters\x12\r\n\x05value\x18\x01 \x01(\x01\" \n\x0fMetersPerSecond\x12\r\n\x05value\x18\x01 \x01(\x01\"\'\n\x16MetersPerSecondSquared\x12\r\n\x05value\x18\x01 \x01(\x01\"\x14\n\x03RPM\x12\r\n\x05value\x18\x01 \x01(\x01\"\x18\n\x07Pascals\x12\r\n\x05value\x18\x01 \x01(\x01\"\x19\n\x08\x44\x65\x63ibels\x12\r\n\x05value\x18\x01 \x01(\x01\"\x18\n\x07Percent\x12\r\n\x05value\x18\x01 \x01(\x01\x42+Z)github.com/airmap/interfaces/src/go/unitsb\x06proto3')
)




_DEGREES = _descriptor.Descriptor(
  name='Degrees',
  full_name='units.Degrees',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='value', full_name='units.Degrees.value', index=0,
      number=1, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=28,
  serialized_end=52,
)


_CELSIUS = _descriptor.Descriptor(
  name='Celsius',
  full_name='units.Celsius',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='value', full_name='units.Celsius.value', index=0,
      number=1, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=54,
  serialized_end=78,
)


_VOLTS = _descriptor.Descriptor(
  name='Volts',
  full_name='units.Volts',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='value', full_name='units.Volts.value', index=0,
      number=1, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=80,
  serialized_end=102,
)


_AMPERES = _descriptor.Descriptor(
  name='Amperes',
  full_name='units.Amperes',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='value', full_name='units.Amperes.value', index=0,
      number=1, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=104,
  serialized_end=128,
)


_AMPEREHOURS = _descriptor.Descriptor(
  name='AmpereHours',
  full_name='units.AmpereHours',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='value', full_name='units.AmpereHours.value', index=0,
      number=1, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=130,
  serialized_end=158,
)


_METERS = _descriptor.Descriptor(
  name='Meters',
  full_name='units.Meters',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='value', full_name='units.Meters.value', index=0,
      number=1, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=160,
  serialized_end=183,
)


_METERSPERSECOND = _descriptor.Descriptor(
  name='MetersPerSecond',
  full_name='units.MetersPerSecond',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='value', full_name='units.MetersPerSecond.value', index=0,
      number=1, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=185,
  serialized_end=217,
)


_METERSPERSECONDSQUARED = _descriptor.Descriptor(
  name='MetersPerSecondSquared',
  full_name='units.MetersPerSecondSquared',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='value', full_name='units.MetersPerSecondSquared.value', index=0,
      number=1, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=219,
  serialized_end=258,
)


_RPM = _descriptor.Descriptor(
  name='RPM',
  full_name='units.RPM',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='value', full_name='units.RPM.value', index=0,
      number=1, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=260,
  serialized_end=280,
)


_PASCALS = _descriptor.Descriptor(
  name='Pascals',
  full_name='units.Pascals',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='value', full_name='units.Pascals.value', index=0,
      number=1, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=282,
  serialized_end=306,
)


_DECIBELS = _descriptor.Descriptor(
  name='Decibels',
  full_name='units.Decibels',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='value', full_name='units.Decibels.value', index=0,
      number=1, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=308,
  serialized_end=333,
)


_PERCENT = _descriptor.Descriptor(
  name='Percent',
  full_name='units.Percent',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='value', full_name='units.Percent.value', index=0,
      number=1, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=335,
  serialized_end=359,
)

DESCRIPTOR.message_types_by_name['Degrees'] = _DEGREES
DESCRIPTOR.message_types_by_name['Celsius'] = _CELSIUS
DESCRIPTOR.message_types_by_name['Volts'] = _VOLTS
DESCRIPTOR.message_types_by_name['Amperes'] = _AMPERES
DESCRIPTOR.message_types_by_name['AmpereHours'] = _AMPEREHOURS
DESCRIPTOR.message_types_by_name['Meters'] = _METERS
DESCRIPTOR.message_types_by_name['MetersPerSecond'] = _METERSPERSECOND
DESCRIPTOR.message_types_by_name['MetersPerSecondSquared'] = _METERSPERSECONDSQUARED
DESCRIPTOR.message_types_by_name['RPM'] = _RPM
DESCRIPTOR.message_types_by_name['Pascals'] = _PASCALS
DESCRIPTOR.message_types_by_name['Decibels'] = _DECIBELS
DESCRIPTOR.message_types_by_name['Percent'] = _PERCENT
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

Degrees = _reflection.GeneratedProtocolMessageType('Degrees', (_message.Message,), dict(
  DESCRIPTOR = _DEGREES,
  __module__ = 'units.units_pb2'
  # @@protoc_insertion_point(class_scope:units.Degrees)
  ))
_sym_db.RegisterMessage(Degrees)

Celsius = _reflection.GeneratedProtocolMessageType('Celsius', (_message.Message,), dict(
  DESCRIPTOR = _CELSIUS,
  __module__ = 'units.units_pb2'
  # @@protoc_insertion_point(class_scope:units.Celsius)
  ))
_sym_db.RegisterMessage(Celsius)

Volts = _reflection.GeneratedProtocolMessageType('Volts', (_message.Message,), dict(
  DESCRIPTOR = _VOLTS,
  __module__ = 'units.units_pb2'
  # @@protoc_insertion_point(class_scope:units.Volts)
  ))
_sym_db.RegisterMessage(Volts)

Amperes = _reflection.GeneratedProtocolMessageType('Amperes', (_message.Message,), dict(
  DESCRIPTOR = _AMPERES,
  __module__ = 'units.units_pb2'
  # @@protoc_insertion_point(class_scope:units.Amperes)
  ))
_sym_db.RegisterMessage(Amperes)

AmpereHours = _reflection.GeneratedProtocolMessageType('AmpereHours', (_message.Message,), dict(
  DESCRIPTOR = _AMPEREHOURS,
  __module__ = 'units.units_pb2'
  # @@protoc_insertion_point(class_scope:units.AmpereHours)
  ))
_sym_db.RegisterMessage(AmpereHours)

Meters = _reflection.GeneratedProtocolMessageType('Meters', (_message.Message,), dict(
  DESCRIPTOR = _METERS,
  __module__ = 'units.units_pb2'
  # @@protoc_insertion_point(class_scope:units.Meters)
  ))
_sym_db.RegisterMessage(Meters)

MetersPerSecond = _reflection.GeneratedProtocolMessageType('MetersPerSecond', (_message.Message,), dict(
  DESCRIPTOR = _METERSPERSECOND,
  __module__ = 'units.units_pb2'
  # @@protoc_insertion_point(class_scope:units.MetersPerSecond)
  ))
_sym_db.RegisterMessage(MetersPerSecond)

MetersPerSecondSquared = _reflection.GeneratedProtocolMessageType('MetersPerSecondSquared', (_message.Message,), dict(
  DESCRIPTOR = _METERSPERSECONDSQUARED,
  __module__ = 'units.units_pb2'
  # @@protoc_insertion_point(class_scope:units.MetersPerSecondSquared)
  ))
_sym_db.RegisterMessage(MetersPerSecondSquared)

RPM = _reflection.GeneratedProtocolMessageType('RPM', (_message.Message,), dict(
  DESCRIPTOR = _RPM,
  __module__ = 'units.units_pb2'
  # @@protoc_insertion_point(class_scope:units.RPM)
  ))
_sym_db.RegisterMessage(RPM)

Pascals = _reflection.GeneratedProtocolMessageType('Pascals', (_message.Message,), dict(
  DESCRIPTOR = _PASCALS,
  __module__ = 'units.units_pb2'
  # @@protoc_insertion_point(class_scope:units.Pascals)
  ))
_sym_db.RegisterMessage(Pascals)

Decibels = _reflection.GeneratedProtocolMessageType('Decibels', (_message.Message,), dict(
  DESCRIPTOR = _DECIBELS,
  __module__ = 'units.units_pb2'
  # @@protoc_insertion_point(class_scope:units.Decibels)
  ))
_sym_db.RegisterMessage(Decibels)

Percent = _reflection.GeneratedProtocolMessageType('Percent', (_message.Message,), dict(
  DESCRIPTOR = _PERCENT,
  __module__ = 'units.units_pb2'
  # @@protoc_insertion_point(class_scope:units.Percent)
  ))
_sym_db.RegisterMessage(Percent)


DESCRIPTOR._options = None
# @@protoc_insertion_point(module_scope)
